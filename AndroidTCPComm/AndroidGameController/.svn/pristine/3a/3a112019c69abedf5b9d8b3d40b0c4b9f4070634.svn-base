import java.awt.BorderLayout;
import java.awt.Font;
import java.awt.GridLayout;
import java.net.InetAddress;
import java.net.UnknownHostException;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JSeparator;
import javax.swing.JSlider;
import javax.swing.JTabbedPane;
import javax.swing.SwingConstants;
import javax.swing.border.EmptyBorder;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

public class ServerUI extends JFrame {

	private static final int PORT = 8888;
	private static final int FPS_MIN = 0;
	private static final int FPS_MAX = 30;
	private static final int FPS_INIT = 15; // initial frames per second
	private static final String MESSAGETOUSER = "Please go to the settings tab to map PC controls to android touch controls.";

	private		JTabbedPane tabbedPane;
	private		JPanel		generalPane;
	private		JPanel		keySettingsPane;
	private		JPanel		testKeysPane;
	
	public static void main(String args[]) throws UnknownHostException {

		ServerUI sui = new ServerUI();
		sui.createBasicUI();
		sui.setVisible(true);

	}

	private void createBasicUI() throws UnknownHostException {
		// TODO Auto-generated method stub

		setTitle("Game Controller Server");
		setSize(600, 400);
		
		JPanel topPanel = new JPanel();
		topPanel.setLayout( new BorderLayout() );
		getContentPane().add( topPanel );
		
		createGeneralTab();
		createSettingsTab();
		createTestKeysTab();

		// We create a panel which will hold the UI components
		tabbedPane = new JTabbedPane();
		tabbedPane.addTab( "General", generalPane );
		tabbedPane.addTab( "Key Settings", keySettingsPane );
		tabbedPane.addTab( "Test Keys", testKeysPane );
		topPanel.add( tabbedPane, BorderLayout.CENTER );


	}

	private void createTestKeysTab() {
		// TODO Auto-generated method stub
		
	}

	private void createSettingsTab() {
		// TODO Auto-generated method stub
		
	}

	private void createGeneralTab() throws UnknownHostException {
		// TODO Auto-generated method stub
		generalPane = new JPanel(new BorderLayout());
		generalPane.setLayout(new GridLayout(8,1));
		generalPane.setBorder(new EmptyBorder(10, 10, 10, 10) );

		JLabel heading = new JLabel(" Server Configuration ");
		heading.setFont(new Font(heading.getName(), Font.BOLD, 20));
		generalPane.add(heading);

		JLabel ipConfig = new JLabel(" Host Name/ IP Address: "
				+ InetAddress.getLocalHost());
		generalPane.add(ipConfig);

		JLabel port = new JLabel(" Port: " + PORT);
		port.setBounds( 10, 15, 1500, 120 );
		generalPane.add(port);

		// change this dynamically
		JLabel status = new JLabel(" Connection Status: Connected");
		status.setBounds( 10, 15, 1500, 160 );
		generalPane.add(status);

		generalPane.add(new JSeparator(SwingConstants.HORIZONTAL));
		
		JLabel mouseCursor = new JLabel(" Mouse Cursor Sensitivity ");
		mouseCursor.setFont(new Font(mouseCursor.getName(), Font.BOLD, 20));
		generalPane.add(mouseCursor);

		JSlider framesPerSecond = new JSlider(JSlider.HORIZONTAL, FPS_MIN,
				FPS_MAX, FPS_INIT);
		framesPerSecond.addChangeListener(new SliderListener());
		
		framesPerSecond.setMajorTickSpacing(10);
		framesPerSecond.setMinorTickSpacing(1);
		framesPerSecond.setPaintTicks(true);
		framesPerSecond.setPaintLabels(true);

		generalPane.add(framesPerSecond);
		
		JLabel msgToUser = new JLabel(MESSAGETOUSER);
		msgToUser.setFont(new Font("Serif", Font.ITALIC, 15));
		//msgToUser.setBounds( 10, 15, 150, 120 );
		generalPane.add(msgToUser);
		
		// add the generalPane to the main window
		//getContentPane().add(generalPane);

		// Pack will make the size of window fitting to the components
		// You could also use for example 
	}

}


class SliderListener implements ChangeListener {
    public void stateChanged(ChangeEvent e) {
        JSlider source = (JSlider)e.getSource();
        if (!source.getValueIsAdjusting()) {
            int fps = (int)source.getValue();
            System.out.println("Slider value"+fps);
            // change according to mouse cursor movement
        }    
    }
}
